<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnY13L6GLd5qPgGAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAnoh3T56KeIyAgIACAAAAAAAAAAAAAAAAAAAAAKKNe5rHtKP+mYVzZAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKeTgbq6ppPtk3xkIQAAAAAAAAAAkXtlOo56ZnF8fIm3hn6D3HV7
        jtJ5fZDIeX2QyHl9kMh5fZDIeX2QyHZ7j818fInUhICD1I13aGkAAAAAAAAAAI94Z2YAAAAAdpvU4JzE
        //98oNn/nMT//5zE//+cxP//nMT//5zE//+Msuz/jLLs/4ux7P1JaKExAAAAAAAAAACPeGdmAAAAAHib
        1OCcxP//fKDZ/5zE//+cxP//nMT//5zE//+cxP//jLLs/4yy7P+Msuz/S2mgMwAAAAAAAAAAj3hnZgAA
        AAB4m9TgnMT//3yg2f+cxP//nMT//5zE//+cxP//nMT//4yy7P+Msuz/jLLs/0tpoDMAAAAAAAAAAI94
        Z2YAAAAAeJvU4JzE//98oNn/nMT//5zE//+cxP//nMT//5zE//+Msuz/jLLs/4yy7P9LaaAzAAAAAAAA
        AACPeGdmAAAAAHib1OCcxP//fKDZ/5zE//+cxP//nMT//5zE//+cxP//jLLs/4yy7P+Msuz/S2mgMwAA
        AAAAAAAAj3hnZgAAAAB4m9TgnMT//3yg2f+cxP//nMT//5zE//+cxP//nMT//4yy7P+Msuz/jLLs/0tp
        oDMAAAAAAAAAAI94Z2YAAAAAeJvU4JzE//98oNn/nMT//5zE//+cxP//nMT//5zE//+Msuz/jLLs/4yy
        7P9LaaAzp5KAw6SPfHuOemVvAAAAAGWJwalpi8PkYIC2+G2RytJpi8PkbZHK0muOxdtrjsXbZIS772SE
        u+9ni8LBRnSiC6GLeIiVgG6Ok3xkIQAAAAAAAAAAN0ltDjVLcSIAAAAANE9xcTNNb3c0TXF6N0ltDjVK
        dRg1SnUYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA+/0AAPP5AADwAQAA8AEAAPABAADwAQAA8AEAAPAB
        AADwAQAA8AEAAHABAAA//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjntoG4l2Yg0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSbW0HkXdmHqpVVQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJWAbbKfinbtmIJv6496aUkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjnhjJJWAbeWhjHrtlIBs1Y5xcQkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACPeGkin4p46tTBsP/Nuqj/l4Fu0AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWgm6XwKua/9TBsP+wnIn1kHhlUwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI+AYBCZgm/qzLin/72omP6XgG6wAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR8a3WxnIn3zruq/6GL
        eu6Oe2g2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjHtjH494ZrKPeWbNj3lnzI56auCVf2z3lX5t8o14
        aNaMeWjTjHlo04x5aNOMeWjTjHlo04x5aNOMeWjTjHlo04x5aNOMeWjTjHlo04x5aNOMeWjTjHln1JN/
        be2Ufm34kXxr5Y95Z8yPeWfMAAAAAAAAAAAAAAAAAAAAAP8AAAGQeGfHj3pmMgAAAABTdKq1XoC37mKE
        vO5ihLzuUnOq+WKEvO5ihLzuYoS87mKEvO5ihLzuYoS87mKEvO5ihLzuYoS87mKEvO5ihLzuYoS87lp8
        svNafLLzYoS87mKEvO5RcqnoTWaiHgAAAAAAAAAAAAAAAAAAAAAAAAAAknxmI495Z6kAAAAAAAAAAFN0
        rOycxP//nMT//5zE//9afLT/nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE
        //+cxP//fKDZ/3yg2f+cxP//nMT//3mc1/1Ja6FiAAAAAAAAAAAAAAAAAAAAAAAAAACReGQzj3lmmAAA
        AAAAAAAAVXau65zE//+cxP//nMT//1p8tP+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE
        //+cxP//nMT//5zE//98oNn/fKDZ/5zE//+cxP//fKDZ/0tpoGYAAAAAAAAAAAAAAAAAAAAAAAAAAJF4
        ZDOPeWaYAAAAAAAAAABVdq7rnMT//5zE//+cxP//Wny0/5zE//+cxP//nMT//5zE//+cxP//nMT//5zE
        //+cxP//nMT//5zE//+cxP//nMT//3yg2f98oNn/nMT//5zE//98oNn/S2mgZgAAAAAAAAAAAAAAAAAA
        AAAAAAAAkXhkM495ZpgAAAAAAAAAAFV2ruucxP//nMT//5zE//9afLT/nMT//5zE//+cxP//nMT//5zE
        //+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//fKDZ/3yg2f+cxP//nMT//3yg2f9LaaBmAAAAAAAA
        AAAAAAAAAAAAAAAAAACReGQzj3lmmAAAAAAAAAAAVXau65zE//+cxP//nMT//1p8tP+cxP//nMT//5zE
        //+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//98oNn/fKDZ/5zE//+cxP//fKDZ/0tp
        oGYAAAAAAAAAAAAAAAAAAAAAAAAAAJF4ZDOPeWaYAAAAAAAAAABVdq7rnMT//5zE//+cxP//Wny0/5zE
        //+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//3yg2f98oNn/nMT//5zE
        //98oNn/S2mgZgAAAAAAAAAAAAAAAAAAAAAAAAAAkXhkM495ZpgAAAAAAAAAAFV2ruucxP//nMT//5zE
        //9afLT/nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//fKDZ/3yg
        2f+cxP//nMT//3yg2f9LaaBmAAAAAAAAAAAAAAAAAAAAAAAAAACReGQzj3lmmAAAAAAAAAAAVXau65zE
        //+cxP//nMT//1p8tP+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE
        //98oNn/fKDZ/5zE//+cxP//fKDZ/0tpoGYAAAAAAAAAAAAAAAAAAAAAAAAAAJF4ZDOPeWaYAAAAAAAA
        AABVdq7rnMT//5zE//+cxP//Wny0/5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE
        //+cxP//nMT//3yg2f98oNn/nMT//5zE//98oNn/S2mgZgAAAAAAAAAAAAAAAAAAAAAAAAAAkXhkM495
        ZpgAAAAAAAAAAFV2ruucxP//nMT//5zE//9afLT/nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE
        //+cxP//nMT//5zE//+cxP//fKDZ/3yg2f+cxP//nMT//3yg2f9LaaBmAAAAAAAAAAAAAAAAAAAAAAAA
        AACReGQzj3lmmAAAAAAAAAAAVXau65zE//+cxP//nMT//1p8tP+cxP//nMT//5zE//+cxP//nMT//5zE
        //+cxP//nMT//5zE//+cxP//nMT//5zE//98oNn/fKDZ/5zE//+cxP//fKDZ/0tpoGYAAAAAAAAAAAAA
        AAAAAAAAAAAAAJF4ZDOPeWaYAAAAAAAAAABVdq7rnMT//5zE//+cxP//Wny0/5zE//+cxP//nMT//5zE
        //+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//3yg2f98oNn/nMT//5zE//98oNn/S2mgZgAA
        AAAAAAAAAAAAAAAAAAAAAAAAkXhkM495ZpgAAAAAAAAAAFV2ruucxP//nMT//5zE//9afLT/nMT//5zE
        //+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//fKDZ/3yg2f+cxP//nMT//3yg
        2f9LaaBmAAAAAAAAAAAAAAAAAAAAAAAAAACReGQzj3lmmAAAAAAAAAAAVXau65zE//+cxP//nMT//1p8
        tP+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//+cxP//nMT//5zE//98oNn/fKDZ/5zE
        //+cxP//fKDZ/0tpoGYAAAAAloBshpN+a/OWgG22gICAAo55ZD2QeGaOAAAAAAAAAABRcqnlia7p/5G4
        8v+RuPL/WHqx/5G48v+RuPL/kbjy/5G48v+RuPL/kbjy/5G48v+RuPL/kbjy/5G48v+RuPL/kbjy/3WY
        0f91mNH/kbjy/5C38f9ggrnxSWiiQgAAAACVfmzu1MCv/56Jd+yRfGclkHpll453Z08AAAAAAAAAAEto
        oixRcaqqUHOpu0trnfFKapv/TGyf5FBzqbtQc6m7S2ud8VBzqbtQc6m7UHOpu1BzqbtNbqLWTW6i1lBz
        qbtPcKXJSWmb/0lpm/9PcKXJUHKpuFBwqGkAAAAAAAAAAJWAbbyfiHfxlH5r8I94ZsaQeWaHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAANE5vRTVOcWY1UHAwAAAAAAAAAAA0TnDSM05xmjROcJk0TnCZNE5wmTRO
        cMgzTXFGAAAAAC5GdAs0TW9jNE1vYy5GdAsAAAAAAAAAAAAAAAAAAAAAqlVVA5F4aTOQeWY3lYBqDAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdJbQ4zTXAyMlBuMzJQ
        bjMyUG4zNk1sIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////4//4/+H/8P/h//j/AAAAPsA
        AAP7AAAD+wAAA/sAAAP7AAAD+wAAA/sAAAP7AAAD+wAAA/sAAAP7AAAD+wAAA/sAAAP7AAAD+wAAAxsA
        AAMXgAAHB/8D////////////////////////////
</value>
  </data>
</root>